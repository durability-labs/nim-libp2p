name: Publish Plots
description: "Publish plots in performance_plots branch and add to the workflow summary"

runs:
  using: "composite"
  steps:
    - name: Clone the performance_plots branch
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository }}
        ref: ${{ env.PUBLISH_BRANCH_NAME }}
        path: ${{ env.CHECKOUT_SUBFOLDER_SUBPLOTS }}
        fetch-depth: 0

    - name: Commit & push plots
      shell: bash
      run: |
        cd $CHECKOUT_SUBFOLDER_SUBPLOTS
        git fetch origin "$PUBLISH_BRANCH_NAME"
        git reset --hard "origin/$PUBLISH_BRANCH_NAME"

        # Remove any branch folder older than 7 days
        DAYS=7
        cutoff=$(( $(date +%s) - DAYS*24*3600 ))
        echo "[cleanup] DAYS=$DAYS"
        echo "[cleanup] cutoff=$cutoff ($(date -u -d "@${cutoff}" +%Y-%m-%dT%H:%M:%SZ 2>/dev/null || true))"

        scan_dir="${PUBLISH_DIR_PLOTS%/}"
        echo "[cleanup] Scanning directory: $scan_dir"
        readarray -d $'\0' -t DIRS < <(find "$scan_dir" -mindepth 1 -maxdepth 1 -type d -print0)
        echo "[cleanup] Found ${#DIRS[@]} directories:"
        for d in "${DIRS[@]}"; do
          echo "  - $d"
        done

        echo "[cleanup] Evaluating by last git commit time (%ct):"
        for d in "${DIRS[@]}"; do
          ts=$(git log -1 --format=%ct -- "$d" 2>/dev/null || true)
          if [ -n "$ts" ]; then
            ts_human=$(date -u -d "@${ts}" +%Y-%m-%dT%H:%M:%SZ 2>/dev/null || true)
            echo "[cleanup] $d -> ts=$ts ($ts_human)"
            if [ "$ts" -le "$cutoff" ]; then
              echo "[cleanup] Deleting: $d"
              rm -rf -- "$d"
            else
              echo "[cleanup] Keeping:  $d"
            fi
          else
            echo "[cleanup] $d -> no git history (skipping)"
          fi
        done
        echo "[cleanup] Done."

        rm -rf $PUBLISH_DIR_PLOTS/$BRANCH_NAME
        mkdir -p $PUBLISH_DIR_PLOTS/$BRANCH_NAME

        cp ../$SHARED_VOLUME_PATH/*.png $PUBLISH_DIR_PLOTS/$BRANCH_NAME/
        cp ../$LATENCY_HISTORY_PATH/*.png $PUBLISH_DIR_PLOTS/
        git add $PUBLISH_DIR_PLOTS/*

        if git diff-index --quiet HEAD --; then
          echo "No changes to commit"
        else
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git commit -m "Update performance plots for $BRANCH_NAME"
          git push origin $PUBLISH_BRANCH_NAME
        fi

    - name: Add plots to GitHub Actions summary
      shell: bash
      run: |
        nim c -r -d:release -o:/tmp/add_plots_to_summary ./performance/scripts/add_plots_to_summary.nim